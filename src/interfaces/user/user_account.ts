/**
* This file is auto-generated by nestjs-proto-gen-ts
*/

import { Observable } from 'rxjs';
import { Metadata } from 'grpc';

export namespace anhuai {
    export namespace user {
        export namespace grpc {
            export interface UserAccount {
                findOne(data: UserAccountIdentifier, metadata?: Metadata): Observable<UserAccountItem>;
                findAll(data: UserAccountsQuery, metadata?: Metadata): Observable<UserAccountItems>;
                insert(data: UserAccountForm, metadata?: Metadata): Observable<UserAccountIdentifier>;
                update(data: UserAccountForm, metadata?: Metadata): Observable<UserAccountIdentifier>;
                delete(data: Observable<UserAccountIdentifier>, metadata?: Metadata): Observable<google.protobuf.Int32Value>;
            }
            export interface UserAccountIdentifier {
                id?: number;
            }
            export interface UserAccountItem {
                // 序号
                id?: number;
                // 账号，唯一
                account?: string;
                // 密码
                password?: string;
                // 昵称
                nickname?: string;
                // 头像图片地址
                imageUrl?: string;
                // 性别（0.其他；1.男；2.女；）
                sex?: number;
                // 出生日期
                birthday?: google.protobuf.Timestamp;
                // 手机号码
                cellphone?: string;
                // 邮箱
                email?: string;
                // 组织类型
                groupType?: string;
                // 组织ID，逻辑外键
                groupId?: number;
                // 添加日期
                insDate?: google.protobuf.Timestamp;
                // 状态
                status?: grpc.Status;
                // 微信UnionID（唯一）
                wxUnionid?: string;
                season?: grpc.Season;
            }
            export interface UserAccountForm {
                // 账号，唯一
                account?: string;
                // 密码
                password?: string;
                // 昵称
                nickname?: string;
                // 头像图片地址
                imageUrl?: string;
                // 性别（0.其他；1.男；2.女；）
                sex?: number;
                // 出生日期
                birthday?: google.protobuf.Timestamp;
                // 手机号码
                cellphone?: string;
                // 邮箱
                email?: string;
                // 组织类型
                groupType?: string;
                // 组织ID，逻辑外键
                groupId?: number;
                // 微信UnionID（唯一）
                wxUnionid?: string;
                // 状态
                status?: grpc.Status;
                // 序号
                id?: number;
                season?: grpc.Season;
            }
            export interface UserAccountsQuery {
                page?: number;
                size?: number;
                sort?: { [key: string]: boolean };
            }
            export interface UserAccountItems {
                page?: number;
                size?: number;
                items?: grpc.UserAccountItem[];
            }
            // 状态
            export enum Status {
                // 已启用
                ENABLED = 0,
                // 已停用
                DISABLED = 1,
                // 已删除
                DELETED = 2,
            }
            // 测试枚举
            export enum Season {
                // 春
                SPRING = 0,
                // 夏
                SUMMER = 1,
                // 秋
                AUTUMN = 2,
                // 冬
                WINTER = 3,
            }
        }
    }
}
export namespace google {
    export namespace protobuf {
        export interface Timestamp {
            seconds?: number;
            nanos?: number;
        }
        export interface DoubleValue {
            value?: number;
        }
        export interface FloatValue {
            value?: number;
        }
        export interface Int64Value {
            value?: number;
        }
        export interface UInt64Value {
            value?: number;
        }
        export interface Int32Value {
            value?: number;
        }
        export interface UInt32Value {
            value?: number;
        }
        export interface BoolValue {
            value?: boolean;
        }
        export interface StringValue {
            value?: string;
        }
        export interface BytesValue {
            value?: Uint8Array;
        }
    }
}

